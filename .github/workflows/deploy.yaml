name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short commit SHA
        id: vars
        run: echo "COMMIT_HASH=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t lpsgabriel/desafio-super-agentes:${{ env.COMMIT_HASH }} .
          docker push lpsgabriel/desafio-super-agentes:${{ env.COMMIT_HASH }}

      - name: AWS CLI setup
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Register new task definition
        id: register_task_definition
        run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition desafio-super-agentes)
          TASK_DEFINITION_CLEAN=$(echo "$TASK_DEFINITION" | jq 'del(.taskDefinition.containerDefinitions[0].environment)')
          echo "Filtered Task Definition: $TASK_DEFINITION_CLEAN"

          NEW_TASK_DEFINITION=$(echo "$TASK_DEFINITION" | jq --arg IMAGE "lpsgabriel/desafio-super-agentes:${{ env.COMMIT_HASH }}" '
            .taskDefinition 
            | .containerDefinitions[0].image = $IMAGE
            | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)
          ')
          echo "$NEW_TASK_DEFINITION" > new-task-definition.json
          aws ecs register-task-definition --cli-input-json file://new-task-definition.json

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster DesafioSuperAgentes \
            --service desafio-chat-super-agentes \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
